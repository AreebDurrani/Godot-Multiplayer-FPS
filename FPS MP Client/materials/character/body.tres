[gd_resource type="ShaderMaterial" load_steps=13 format=2]

[ext_resource path="res://textures/character/body.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVectorInterp" id=1]

[sub_resource type="VisualShaderNodeScalarUniform" id=2]
uniform_name = "roughness"

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=4]

[sub_resource type="VisualShaderNodeColorUniform" id=5]
uniform_name = "color_a"

[sub_resource type="VisualShaderNodeColorUniform" id=6]
uniform_name = "color_b"

[sub_resource type="VisualShaderNodeColorUniform" id=7]
uniform_name = "color_c"

[sub_resource type="VisualShaderNodeColorUniform" id=8]
uniform_name = "color_d"

[sub_resource type="VisualShaderNodeVectorInterp" id=9]

[sub_resource type="VisualShaderNodeVectorInterp" id=10]

[sub_resource type="VisualShader" id=11]
code = "shader_type spatial;
uniform vec4 color_a : hint_color;
uniform vec4 color_b : hint_color;
uniform sampler2D tex_frg_2;
uniform vec4 color_c : hint_color;
uniform vec4 color_d : hint_color;
uniform float roughness;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:4
	vec3 n_out4p0 = color_a.rgb;
	float n_out4p1 = color_a.a;

// ColorUniform:5
	vec3 n_out5p0 = color_b.rgb;
	float n_out5p1 = color_b.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// VectorDecompose:3
	float n_out3p0 = n_out2p0.x;
	float n_out3p1 = n_out2p0.y;
	float n_out3p2 = n_out2p0.z;

// VectorMix:8
	vec3 n_out8p0 = mix(n_out4p0, n_out5p0, vec3(n_out3p0));

// ColorUniform:6
	vec3 n_out6p0 = color_c.rgb;
	float n_out6p1 = color_c.a;

// VectorMix:9
	vec3 n_out9p0 = mix(n_out8p0, n_out6p0, vec3(n_out3p1));

// ColorUniform:7
	vec3 n_out7p0 = color_d.rgb;
	float n_out7p1 = color_d.a;

// VectorMix:10
	vec3 n_out10p0 = mix(n_out9p0, n_out7p0, vec3(n_out3p2));

// ScalarUniform:11
	float n_out11p0 = roughness;

// Output:0
	ALBEDO = n_out10p0;
	ROUGHNESS = n_out11p0;

}

void light() {
// Output:0

}
"
nodes/fragment/0/position = Vector2( 500, 80 )
nodes/fragment/2/node = SubResource( 3 )
nodes/fragment/2/position = Vector2( -400, 140 )
nodes/fragment/3/node = SubResource( 4 )
nodes/fragment/3/position = Vector2( -180, 140 )
nodes/fragment/4/node = SubResource( 5 )
nodes/fragment/4/position = Vector2( 20, -360 )
nodes/fragment/5/node = SubResource( 6 )
nodes/fragment/5/position = Vector2( 20, -240 )
nodes/fragment/6/node = SubResource( 7 )
nodes/fragment/6/position = Vector2( 20, -120 )
nodes/fragment/7/node = SubResource( 8 )
nodes/fragment/7/position = Vector2( 20, 0 )
nodes/fragment/8/node = SubResource( 9 )
nodes/fragment/8/position = Vector2( 240, -300 )
nodes/fragment/9/node = SubResource( 10 )
nodes/fragment/9/position = Vector2( 240, -180 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 240, -40 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 207, 193.5 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 8, 2, 4, 0, 8, 0, 5, 0, 8, 1, 3, 1, 9, 2, 6, 0, 9, 1, 8, 0, 9, 0, 9, 0, 10, 0, 7, 0, 10, 1, 3, 2, 10, 2, 10, 0, 0, 0, 11, 0, 0, 3 )

[resource]
resource_local_to_scene = true
shader = SubResource( 11 )
shader_param/color_a = Color( 0.0666667, 0.0666667, 0.0666667, 1 )
shader_param/color_b = Color( 0.629781, 0.632812, 0.24472, 1 )
shader_param/color_c = Color( 0.490196, 0.458517, 0.121569, 1 )
shader_param/color_d = Color( 0.273438, 0.25719, 0.0843811, 1 )
shader_param/roughness = 0.8
