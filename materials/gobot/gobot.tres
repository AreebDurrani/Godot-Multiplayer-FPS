[gd_resource type="ShaderMaterial" load_steps=19 format=2]

[ext_resource path="res://materials/gobot/gobot_mask.png" type="Texture" id=1]
[ext_resource path="res://materials/gobot/gobot_orm.png" type="Texture" id=2]
[ext_resource path="res://materials/gobot/gobot_normal.png" type="Texture" id=3]
[ext_resource path="res://materials/gobot/gobot_color.png" type="Texture" id=4]

[sub_resource type="VisualShaderNodeScalarConstant" id=1]
constant = 1.0

[sub_resource type="VisualShaderNodeScalarConstant" id=2]
constant = 0.25

[sub_resource type="VisualShaderNodeTextureUniform" id=3]
uniform_name = "Ramp"

[sub_resource type="VisualShaderNodeVectorOp" id=4]
output_port_for_preview = 0
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=5]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=6]
texture = ExtResource( 4 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=7]
texture = ExtResource( 1 )
texture_type = 1

[sub_resource type="VisualShaderNodeTexture" id=8]
texture = ExtResource( 3 )
texture_type = 2

[sub_resource type="VisualShaderNodeVectorInterp" id=9]

[sub_resource type="VisualShaderNodeVectorDecompose" id=10]
output_port_for_preview = 2

[sub_resource type="VisualShaderNodeColorUniform" id=11]
uniform_name = "color"

[sub_resource type="VisualShader" id=12]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform vec4 color : hint_color;
uniform sampler2D tex_frg_2 : hint_albedo;
uniform sampler2D tex_frg_3 : hint_albedo;
uniform sampler2D Ramp;
uniform sampler2D tex_frg_14;
uniform sampler2D tex_frg_4 : hint_normal;



void vertex() {
// Output:0

}

void fragment() {
// ColorUniform:9
	vec3 n_out9p0 = color.rgb;
	float n_out9p1 = color.a;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// TextureUniform:12
	vec3 n_out12p0;
	float n_out12p1;
	{
		vec4 n_tex_read = texture(Ramp, UV.xy);
		n_out12p0 = n_tex_read.rgb;
		n_out12p1 = n_tex_read.a;
	}

// VectorOp:13
	vec3 n_out13p0 = n_out3p0 * n_out12p0;

// VectorMix:6
	vec3 n_out6p0 = mix(n_out9p0, n_out2p0, n_out13p0);

// Texture:14
	vec4 tex_frg_14_read = texture(tex_frg_14, UV.xy);
	vec3 n_out14p0 = tex_frg_14_read.rgb;
	float n_out14p1 = tex_frg_14_read.a;

// VectorDecompose:8
	float n_out8p0 = n_out14p0.x;
	float n_out8p1 = n_out14p0.y;
	float n_out8p2 = n_out14p0.z;

// Scalar:11
	float n_out11p0 = 0.250000;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Scalar:10
	float n_out10p0 = 1.000000;

// Output:0
	ALBEDO = n_out6p0;
	METALLIC = n_out8p2;
	ROUGHNESS = n_out8p1;
	SPECULAR = n_out11p0;
	AO = n_out8p0;
	NORMALMAP = n_out4p0;
	AO_LIGHT_AFFECT = n_out10p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -199, 133 )
nodes/fragment/0/position = Vector2( 560, 160 )
nodes/fragment/2/node = SubResource( 6 )
nodes/fragment/2/position = Vector2( -300, -20 )
nodes/fragment/3/node = SubResource( 7 )
nodes/fragment/3/position = Vector2( -660, 160 )
nodes/fragment/4/node = SubResource( 8 )
nodes/fragment/4/position = Vector2( 120, 700 )
nodes/fragment/6/node = SubResource( 9 )
nodes/fragment/6/position = Vector2( 100, 120 )
nodes/fragment/8/node = SubResource( 10 )
nodes/fragment/8/position = Vector2( 40, 360 )
nodes/fragment/9/node = SubResource( 11 )
nodes/fragment/9/position = Vector2( -280, -140 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 60, 580 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 100, 260 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( -660, 440 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( -280, 240 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( -300, 540 )
nodes/fragment/connections = PoolIntArray( 6, 0, 0, 0, 9, 0, 6, 0, 2, 0, 6, 1, 8, 1, 0, 3, 8, 0, 0, 6, 10, 0, 0, 19, 4, 0, 0, 8, 11, 0, 0, 4, 8, 2, 0, 2, 12, 0, 13, 1, 13, 0, 6, 2, 3, 0, 13, 0, 14, 0, 8, 0 )

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0, 0.868106 )
colors = PoolColorArray( 0, 0, 0, 1, 0.968825, 0.968825, 0.968825, 1 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[resource]
resource_local_to_scene = true
shader = SubResource( 12 )
shader_param/color = null
shader_param/Ramp = SubResource( 14 )
